# 📌 Fiche pratique – CROSS JOIN

## 🔹 Définition

Le `CROSS JOIN` fait le **produit cartésien** de deux tables :
👉 Chaque ligne de la première table est combinée avec **toutes** les lignes de la deuxième table.
⚠️ Attention : cela peut rapidement générer un grand nombre de lignes.

---

## 🔹 Syntaxe SQL

```sql
SELECT *
FROM table1
CROSS JOIN table2;
```

Alias pour écrire plus court (équivalent sans `JOIN`) :

```sql
SELECT *
FROM table1, table2;
```

---

## 🔹 Exemple SQL

Si :

* `table1` = clients (3 lignes)
* `table2` = produits (4 lignes)

```sql
SELECT c.nom, p.nom_produit
FROM clients c
CROSS JOIN produits p;
```

📊 Résultat → `3 x 4 = 12` lignes.

---

## 🔹 Équivalent en Python (pandas)

```python
import pandas as pd

# Exemple : deux DataFrames
clients = pd.DataFrame({"client": ["Alice", "Bob", "Chloé"]})
produits = pd.DataFrame({"produit": ["Livre", "Stylo", "PC", "Chaise"]})

# CROSS JOIN avec un merge spécial
cross_join = clients.merge(produits, how="cross")

print(cross_join)
```

📊 Résultat : même logique → produit cartésien.

---

✅ **À retenir** :

* `CROSS JOIN` = produit cartésien.
* Utilisé pour générer toutes les combinaisons possibles.
* À manier avec précaution sur de grosses tables 🚨.

---
